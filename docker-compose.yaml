version: "3.8"

volumes:
  postgresql-mlflow-data:
  mlflow-artifact-store:
    

x-app-template: &app-template
  user: "${USER_ID:-1000}"
  hostname: "${HOST_NAME:-spaceship-titanic}"
  image: spaceship-titanic
  platform: linux/amd64
  container_name: spaceship-titanic-container
  build:
    context: .
    dockerfile: ./docker/Dockerfile
    args:
      USER_NAME: "${USER_NAME:-yxing}"
      USER_ID: "${USER_ID:-1000}"
  env_file:
    - .envs/.mlflow-common
    - .envs/.mlflow-dev
    - .envs/.postgres
  volumes:
    - ./:/app/
    - mlflow-artifact-store:/mlflow-artifact-store
  ipc: host
  init: true


services: 
  mlflow-db:
    container_name: mlflow-backend-store
    image: postgres:14
    env_file:
      - .envs/.mlflow-common
      - .envs/.mlflow-dev
      - .envs/.postgres
    ports:
      - 5433:5432
    profiles:
      - dev
      
  app-dev:
    <<: *app-template
    container_name: spaceship-titanic-dev-container
    ports:
      - ${LOCAL_DEV_MLFLOW_SERVER_PORT}:${LOCAL_DEV_MLFLOW_SERVER_PORT}
      - 8080:8080
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    profiles:
      - dev

  app-ci:
    <<: *app-template
    container_name: spaceship-titanic-ci-container
    ports:
      - ${LOCAL_DEV_MLFLOW_SERVER_PORT}:${LOCAL_DEV_MLFLOW_SERVER_PORT}
    profiles:
      - ci

    

